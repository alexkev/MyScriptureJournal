@{
    Layout = "~/_Layout.cshtml";
    Page.Chapter = "Favorite Scriptures";

    var db = Database.Open("scriptures");
    var selectCommand = "SELECT * FROM scriptures";
    var searchVerse = "";

    if (!Request.QueryString["searchBook"].IsEmpty())
    {
        selectCommand = "SELECT * FROM scriptures WHERE Book = @0";
        searchVerse = Request.QueryString["searchBook"];
    }

    if (!Request.QueryString["searchChapter"].IsEmpty())
    {
        selectCommand = "SELECT * FROM scriptures WHERE Chapter LIKE @0";
        searchVerse = "%" + Request.QueryString["searchChapter"] + "%";
    }

    var selectedData = db.Query(selectCommand, searchVerse);
    var grid = new WebGrid(source: selectedData, defaultSort: "Book", rowsPerPage: 3);
}

<h2>List Scriptures</h2>
<form method="get">
    <div>
        <label for="searchBook">Book to look for:</label>
        <input type="text" name="searchBook" value="@Request.QueryString["searchBook"]" />
        <input type="Submit" value="Search Book" /><br />
        (Leave blank to list all scriptures.)<br />
    </div>

    <div>
        <label for="SearchChapter">Scriptures Chapter:</label>
        <input type="text" name="searchChapter" value="@Request.QueryString["searchChapter"]" />
        <input type="Submit" value="Search Chapter" /><br />
    </div>
</form>

<div>
    @grid.GetHtml(
        tableStyle: "grid",
        headerStyle: "head",
        alternatingRowStyle: "alt",
        columns: grid.Columns(
    grid.Column(format: @<a href="~/edit?id=@item.ID">Edit</a>),
                            grid.Column("Book"),
                            grid.Column("Chapter"),
                            grid.Column("Verse"),
                            grid.Column(format: @<a href="~/delete?id=@item.ID">Delete</a>)
                                                )
                                            )
</div>
<p><a href="~/add">Add a scripture</a></p>